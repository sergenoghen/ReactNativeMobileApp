{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultRenderError = defaultRenderError;\nexports.defaultRenderLoading = defaultRenderLoading;\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar styles = _reactNative.StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\nfunction defaultRenderError(source) {\n  return _react.default.createElement(_reactNative.View, {\n    testID: \"loader-error\",\n    style: styles.alignCenter\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.errorText\n  }, \"Failed to load HTML from \", source.uri));\n}\nfunction defaultRenderLoading() {\n  return _react.default.createElement(_reactNative.View, {\n    testID: \"loader-loading\",\n    style: styles.alignCenter\n  }, _react.default.createElement(_reactNative.ActivityIndicator, null));\n}\nvar sourceLoaderContext = _react.default.createContext({\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n});\nvar _default = sourceLoaderContext;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","styles","StyleSheet","create","alignCenter","flex","alignItems","justifyContent","errorText","fontStyle","fontSize","defaultRenderError","source","default","createElement","View","testID","style","Text","uri","defaultRenderLoading","ActivityIndicator","sourceLoaderContext","createContext","remoteErrorView","remoteLoadingView"],"sources":["C:\\applicationJS\\react-apps\\ReactNativeMobileApp\\node_modules\\react-native-render-html\\lib\\commonjs\\context\\sourceLoaderContext.tsx"],"sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\nimport { RenderHTMLConfig, HTMLSourceUri } from '../shared-types';\n\nconst styles = StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\n\nexport function defaultRenderError(source: HTMLSourceUri) {\n  return (\n    <View testID=\"loader-error\" style={styles.alignCenter}>\n      <Text style={styles.errorText}>\n        Failed to load HTML from {source.uri}\n      </Text>\n    </View>\n  );\n}\n\nexport function defaultRenderLoading() {\n  return (\n    <View testID=\"loader-loading\" style={styles.alignCenter}>\n      <ActivityIndicator />\n    </View>\n  );\n}\n\nconst sourceLoaderContext = React.createContext<\n  Pick<Required<RenderHTMLConfig>, 'remoteErrorView' | 'remoteLoadingView'>\n>({\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n});\n\nexport default sourceLoaderContext;\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;;;;;;AAIA,IAAME,MAAM,GAAGD,YAAA,CAAAE,UAAA,CAAWC,MAAX,CAAkB;EAC/BC,WAAW,EAAE;IACXC,IAAI,EAAE,CADK;IAEXC,UAAU,EAAE,QAFD;IAGXC,cAAc,EAAE;EAHL,CADkB;EAM/BC,SAAS,EAAE;IACTC,SAAS,EAAE,QADF;IAETC,QAAQ,EAAE;EAFD;AANoB,CAAlB,CAAf;AAYO,SAASC,kBAATA,CAA4BC,MAA5B,EAAmD;EACxD,OACEf,MAAA,CAAAgB,OAAA,CAAAC,aAAA,CAACd,YAAA,CAAAe,IAAD;IAAMC,MAAM,EAAC,cAAb;IAA4BC,KAAK,EAAEhB,MAAM,CAACG;EAA1C,GACEP,MAAA,CAAAgB,OAAA,CAAAC,aAAA,CAACd,YAAA,CAAAkB,IAAD;IAAMD,KAAK,EAAEhB,MAAM,CAACO;EAApB,gCAC4BI,MAAM,CAACO,GADnC,CADF,CADF;AAOD;AAEM,SAASC,oBAATA,CAAA,EAAgC;EACrC,OACEvB,MAAA,CAAAgB,OAAA,CAAAC,aAAA,CAACd,YAAA,CAAAe,IAAD;IAAMC,MAAM,EAAC,gBAAb;IAA8BC,KAAK,EAAEhB,MAAM,CAACG;EAA5C,GACEP,MAAA,CAAAgB,OAAA,CAAAC,aAAA,CAACd,YAAA,CAAAqB,iBAAD,OADF,CADF;AAKD;AAED,IAAMC,mBAAmB,GAAGzB,MAAA,CAAAgB,OAAA,CAAMU,aAAN,CAE1B;EACAC,eAAe,EAAEb,kBADjB;EAEAc,iBAAiB,EAAEL;AAFnB,CAF0B,CAA5B;eAOeE,mB"},"metadata":{},"sourceType":"script","externalDependencies":[]}