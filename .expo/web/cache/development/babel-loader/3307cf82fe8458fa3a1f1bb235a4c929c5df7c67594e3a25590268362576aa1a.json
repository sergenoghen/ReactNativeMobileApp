{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = domNodeToHTMLString;\nvar _stringifyEntities = _interopRequireDefault(require(\"stringify-entities\"));\nvar _transientRenderEngine = require(\"@native-html/transient-render-engine\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction renderOpeningTag(tag, attributes) {\n  var strAttributes = [];\n  Object.keys(attributes).forEach(function (key) {\n    strAttributes.push(key + \"=\\\"\" + (0, _stringifyEntities.default)(\"\" + attributes[key]) + \"\\\"\");\n  });\n  return \"<\" + tag + (strAttributes.length ? ' ' : '') + strAttributes.join(' ') + \">\";\n}\nfunction domNodeToHTMLString(root, reporter) {\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var html = '';\n  if ((0, _transientRenderEngine.isDomElement)(root)) {\n    var strChildren = root.children.reduce(function (prev, curr) {\n      var convertedNode = domNodeToHTMLString(curr, reporter, depth + 1);\n      return \"\" + prev + convertedNode;\n    }, '');\n    html = \"\" + renderOpeningTag(root.tagName, root.attribs) + strChildren + \"</\" + root.tagName + \">\";\n  } else if ((0, _transientRenderEngine.isDomText)(root)) {\n    var text = (0, _stringifyEntities.default)(root.data);\n    html = text;\n  }\n  typeof reporter === 'function' && reporter(root, depth, html);\n  return html;\n}","map":{"version":3,"names":["_stringifyEntities","_interopRequireDefault","require","_transientRenderEngine","renderOpeningTag","tag","attributes","strAttributes","Object","keys","forEach","key","push","default","length","join","domNodeToHTMLString","root","reporter","depth","arguments","undefined","html","isDomElement","strChildren","children","reduce","prev","curr","convertedNode","tagName","attribs","isDomText","text","data"],"sources":["C:\\applicationJS\\react-apps\\ReactNativeMobileApp\\node_modules\\react-native-render-html\\lib\\commonjs\\helpers\\domNodeToHTMLString.ts"],"sourcesContent":["import strigifyEntities from 'stringify-entities';\nimport {\n  Node,\n  isDomText,\n  isDomElement\n} from '@native-html/transient-render-engine';\n\nfunction renderOpeningTag(tag: string, attributes: Record<string, string>) {\n  const strAttributes: string[] = [];\n  Object.keys(attributes).forEach((key) => {\n    strAttributes.push(`${key}=\"${strigifyEntities(`${attributes[key]}`)}\"`);\n  });\n  return `<${tag}${strAttributes.length ? ' ' : ''}${strAttributes.join(' ')}>`;\n}\n\n/**\n * Convert a DOM node to its HTML representation.\n *\n * @param root - The root to stringify.\n * @param reporter - An optional function which will receive every\n * parsed node as 1st argument, the depth as 2d argument and the converted html\n * as 3d argument.\n */\nexport default function domNodeToHTMLString(\n  root: Node | null,\n  reporter?: DomNodeToHtmlReporter,\n  depth = 0\n) {\n  let html = '';\n  if (isDomElement(root)) {\n    const strChildren = root.children.reduce((prev, curr) => {\n      const convertedNode = domNodeToHTMLString(curr, reporter, depth + 1);\n      return `${prev}${convertedNode}`;\n    }, '');\n    html = `${renderOpeningTag(root.tagName, root.attribs)}${strChildren}</${\n      root.tagName\n    }>`;\n  } else if (isDomText(root)) {\n    const text = strigifyEntities(root.data);\n    html = text;\n  }\n  typeof reporter === 'function' && reporter(root, depth, html);\n  return html;\n}\n\n/**\n * @public\n */\nexport interface DomNodeToHtmlReporter {\n  /**\n   * @param node - The node being parsed.\n   * @param depth - How many parents this node have.\n   * @param html - The HTML representation of this node and its children.\n   */\n  (node: Node | null, depth: number, html: string): void;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,sBAAA,GAAAD,OAAA;;;;;;AAMA,SAASE,gBAATA,CAA0BC,GAA1B,EAAuCC,UAAvC,EAA2E;EACzE,IAAMC,aAAuB,GAAG,EAAhC;EACAC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,OAAxB,CAAiC,UAAAC,GAAD,EAAS;IACvCJ,aAAa,CAACK,IAAd,CAAsBD,GAAI,WAAI,IAAAX,kBAAA,CAAAa,OAAA,OAAoBP,UAAU,CAACK,GAAD,CAAM,CAAG,QAArE;EACD,CAFD;EAGA,aAAWN,GAAI,IAAEE,aAAa,CAACO,MAAd,GAAuB,GAAvB,GAA6B,EAAG,IAAEP,aAAa,CAACQ,IAAd,CAAmB,GAAnB,CAAwB;AAC5E;AAUc,SAASC,mBAATA,CACbC,IADa,EAEbC,QAFa,EAIb;EAAA,IADAC,KAAK,GAAAC,SAAA,CAAAN,MAAA,QAAAM,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAHK;EAKb,IAAIE,IAAI,GAAG,EAAX;EACA,IAAI,IAAAnB,sBAAA,CAAAoB,YAAA,EAAaN,IAAb,CAAJ,EAAwB;IACtB,IAAMO,WAAW,GAAGP,IAAI,CAACQ,QAAL,CAAcC,MAAd,CAAqB,UAACC,IAAD,EAAOC,IAAP,EAAgB;MACvD,IAAMC,aAAa,GAAGb,mBAAmB,CAACY,IAAD,EAAOV,QAAP,EAAiBC,KAAK,GAAG,CAAzB,CAAzC;MACA,YAAUQ,IAAK,GAAEE,aAAc;IAChC,CAHmB,EAGjB,EAHiB,CAApB;IAIAP,IAAI,QAAMlB,gBAAgB,CAACa,IAAI,CAACa,OAAN,EAAeb,IAAI,CAACc,OAApB,CAA6B,GAAEP,WAAY,UACnEP,IAAI,CAACa,OACN,MAFD;EAGD,CARD,MAQO,IAAI,IAAA3B,sBAAA,CAAA6B,SAAA,EAAUf,IAAV,CAAJ,EAAqB;IAC1B,IAAMgB,IAAI,GAAG,IAAAjC,kBAAA,CAAAa,OAAA,EAAiBI,IAAI,CAACiB,IAAtB,CAAb;IACAZ,IAAI,GAAGW,IAAP;EACD;EACD,OAAOf,QAAP,KAAoB,UAApB,IAAkCA,QAAQ,CAACD,IAAD,EAAOE,KAAP,EAAcG,IAAd,CAA1C;EACA,OAAOA,IAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}