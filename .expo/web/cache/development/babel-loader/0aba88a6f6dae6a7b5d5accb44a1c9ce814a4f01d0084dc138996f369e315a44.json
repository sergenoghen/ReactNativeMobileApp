{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIMGElementState;\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _defaultInitialImageDimensions = _interopRequireDefault(require(\"./defaultInitialImageDimensions\"));\nvar _useIMGNormalizedSource = _interopRequireDefault(require(\"./useIMGNormalizedSource\"));\nvar _useImageConcreteDimensions = _interopRequireDefault(require(\"./useImageConcreteDimensions\"));\nvar _getIMGState = require(\"./getIMGState\");\nvar _useImageSpecifiedDimensions = _interopRequireDefault(require(\"./useImageSpecifiedDimensions\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getImageSizeAsync(_ref) {\n  var uri = _ref.uri,\n    headers = _ref.headers;\n  return new Promise(function (onsuccess, onerror) {\n    var onImageDimensionsSuccess = function onImageDimensionsSuccess(width, height) {\n      return onsuccess({\n        width: width,\n        height: height\n      });\n    };\n    if (headers) {\n      _reactNative.Image.getSizeWithHeaders(uri, headers, onImageDimensionsSuccess, onerror);\n    } else {\n      _reactNative.Image.getSize(uri, onImageDimensionsSuccess, onerror);\n    }\n  });\n}\nfunction useImageNaturalDimensions(props) {\n  var source = props.source,\n    cachedNaturalDimensions = props.cachedNaturalDimensions;\n  var _ref2 = (0, _react.useState)(cachedNaturalDimensions || null),\n    _ref3 = _slicedToArray(_ref2, 2),\n    naturalDimensions = _ref3[0],\n    setNaturalDimensions = _ref3[1];\n  var _ref4 = cachedNaturalDimensions || {},\n    cachedNaturalWidth = _ref4.width,\n    cachedNaturalHeight = _ref4.height;\n  var _ref5 = (0, _react.useState)(null),\n    _ref6 = _slicedToArray(_ref5, 2),\n    error = _ref6[0],\n    setError = _ref6[1];\n  (0, _react.useEffect)(function resetOnURIChange() {\n    setNaturalDimensions(cachedNaturalWidth != null && cachedNaturalHeight != null ? {\n      width: cachedNaturalWidth,\n      height: cachedNaturalHeight\n    } : null);\n    setError(null);\n  }, [cachedNaturalHeight, cachedNaturalWidth, source.uri]);\n  return {\n    onNaturalDimensions: setNaturalDimensions,\n    onError: setError,\n    naturalDimensions: naturalDimensions,\n    error: error\n  };\n}\nfunction useFetchedNaturalDimensions(props) {\n  var source = props.source,\n    cachedNaturalDimensions = props.cachedNaturalDimensions;\n  var _useImageNaturalDimen = useImageNaturalDimensions(props),\n    error = _useImageNaturalDimen.error,\n    naturalDimensions = _useImageNaturalDimen.naturalDimensions,\n    onError = _useImageNaturalDimen.onError,\n    onNaturalDimensions = _useImageNaturalDimen.onNaturalDimensions;\n  var hasCachedDimensions = !!cachedNaturalDimensions;\n  (0, _react.useEffect)(function fetchPhysicalDimensions() {\n    var cancelled = false;\n    if (source.uri && !hasCachedDimensions) {\n      getImageSizeAsync({\n        uri: source.uri,\n        headers: source.headers\n      }).then(function (dimensions) {\n        return !cancelled && onNaturalDimensions(dimensions);\n      }).catch(function (e) {\n        return !cancelled && onError(e || {});\n      });\n      return function () {\n        cancelled = true;\n      };\n    }\n  }, [source.uri, source.headers, onNaturalDimensions, onError, hasCachedDimensions]);\n  return {\n    naturalDimensions: naturalDimensions,\n    error: error,\n    onError: onError,\n    onNaturalDimensions: onNaturalDimensions\n  };\n}\nfunction useIMGElementState(props) {\n  var alt = props.alt,\n    altColor = props.altColor,\n    source = props.source,\n    contentWidth = props.contentWidth,\n    computeMaxWidth = props.computeMaxWidth,\n    objectFit = props.objectFit,\n    _props$initialDimensi = props.initialDimensions,\n    initialDimensions = _props$initialDimensi === void 0 ? _defaultInitialImageDimensions.default : _props$initialDimensi,\n    cachedNaturalDimensions = props.cachedNaturalDimensions;\n  var _ref7 = (0, _useImageSpecifiedDimensions.default)(props),\n    flatStyle = _ref7.flatStyle,\n    specifiedDimensions = _ref7.specifiedDimensions;\n  var nomalizedSource = (0, _useIMGNormalizedSource.default)({\n    specifiedDimensions: specifiedDimensions,\n    source: source\n  });\n  var _useFetchedNaturalDim = useFetchedNaturalDimensions({\n      source: nomalizedSource,\n      specifiedDimensions: specifiedDimensions,\n      cachedNaturalDimensions: cachedNaturalDimensions\n    }),\n    naturalDimensions = _useFetchedNaturalDim.naturalDimensions,\n    onError = _useFetchedNaturalDim.onError,\n    error = _useFetchedNaturalDim.error;\n  var concreteDimensions = (0, _useImageConcreteDimensions.default)({\n    flatStyle: flatStyle,\n    naturalDimensions: naturalDimensions,\n    specifiedDimensions: specifiedDimensions,\n    computeMaxWidth: computeMaxWidth,\n    contentWidth: contentWidth\n  });\n  return (0, _getIMGState.getIMGState)({\n    error: error,\n    alt: alt,\n    altColor: altColor,\n    concreteDimensions: concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions: initialDimensions,\n    objectFit: objectFit,\n    onError: onError,\n    source: nomalizedSource\n  });\n}","map":{"version":3,"names":["_react","require","_reactNative","_defaultInitialImageDimensions","_interopRequireDefault","_useIMGNormalizedSource","_useImageConcreteDimensions","_getIMGState","_useImageSpecifiedDimensions","getImageSizeAsync","_ref","uri","headers","Promise","onsuccess","onerror","onImageDimensionsSuccess","width","height","Image","getSizeWithHeaders","getSize","useImageNaturalDimensions","props","source","cachedNaturalDimensions","_ref2","useState","_ref3","_slicedToArray","naturalDimensions","setNaturalDimensions","_ref4","cachedNaturalWidth","cachedNaturalHeight","_ref5","_ref6","error","setError","useEffect","resetOnURIChange","onNaturalDimensions","onError","useFetchedNaturalDimensions","_useImageNaturalDimen","hasCachedDimensions","fetchPhysicalDimensions","cancelled","then","dimensions","catch","e","useIMGElementState","alt","altColor","contentWidth","computeMaxWidth","objectFit","_props$initialDimensi","initialDimensions","default","_ref7","flatStyle","specifiedDimensions","nomalizedSource","_useFetchedNaturalDim","concreteDimensions","getIMGState","containerStyle"],"sources":["C:\\applicationJS\\react-apps\\ReactNativeMobileApp\\node_modules\\react-native-render-html\\lib\\commonjs\\elements\\useIMGElementState.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Image, ImageURISource } from 'react-native';\nimport {\n  UseIMGElementStateProps,\n  IMGElementState,\n  IncompleteImageDimensions\n} from './img-types';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport useIMGNormalizedSource from './useIMGNormalizedSource';\nimport { ImageDimensions } from '../shared-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport { getIMGState } from './getIMGState';\nimport useImageSpecifiedDimensions from './useImageSpecifiedDimensions';\n\nfunction getImageSizeAsync({\n  uri,\n  headers\n}: {\n  headers: any;\n  uri: string;\n}): Promise<ImageDimensions> {\n  return new Promise<ImageDimensions>((onsuccess, onerror) => {\n    const onImageDimensionsSuccess = (width: number, height: number) =>\n      onsuccess({ width, height });\n    if (headers) {\n      Image.getSizeWithHeaders(uri, headers, onImageDimensionsSuccess, onerror);\n    } else {\n      Image.getSize(uri, onImageDimensionsSuccess, onerror);\n    }\n  });\n}\n\nfunction useImageNaturalDimensions<P extends UseIMGElementStateProps>(props: {\n  cachedNaturalDimensions?: ImageDimensions;\n  source: ImageURISource;\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const { source, cachedNaturalDimensions } = props;\n  const [naturalDimensions, setNaturalDimensions] = useState<\n    P['cachedNaturalDimensions'] extends ImageDimensions\n      ? ImageDimensions\n      : ImageDimensions | null\n  >((cachedNaturalDimensions as any) || null);\n  const { width: cachedNaturalWidth, height: cachedNaturalHeight } =\n    cachedNaturalDimensions || {};\n  const [error, setError] = useState<null | Error>(null);\n  useEffect(\n    function resetOnURIChange() {\n      setNaturalDimensions(\n        (cachedNaturalWidth != null && cachedNaturalHeight != null\n          ? { width: cachedNaturalWidth, height: cachedNaturalHeight }\n          : null) as any\n      );\n      setError(null);\n    },\n    [cachedNaturalHeight, cachedNaturalWidth, source.uri]\n  );\n  return {\n    onNaturalDimensions: setNaturalDimensions,\n    onError: setError,\n    naturalDimensions,\n    error\n  };\n}\n\nfunction useFetchedNaturalDimensions(props: {\n  cachedNaturalDimensions?: ImageDimensions;\n  source: ImageURISource;\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const { source, cachedNaturalDimensions } = props;\n  const { error, naturalDimensions, onError, onNaturalDimensions } =\n    useImageNaturalDimensions(props);\n  const hasCachedDimensions = !!cachedNaturalDimensions;\n  useEffect(\n    function fetchPhysicalDimensions() {\n      let cancelled = false;\n      if (source.uri && !hasCachedDimensions) {\n        getImageSizeAsync({ uri: source.uri, headers: source.headers })\n          .then((dimensions) => !cancelled && onNaturalDimensions(dimensions))\n          .catch((e) => !cancelled && onError(e || {}));\n        return () => {\n          cancelled = true;\n        };\n      }\n    },\n    [\n      source.uri,\n      source.headers,\n      onNaturalDimensions,\n      onError,\n      hasCachedDimensions\n    ]\n  );\n  return {\n    naturalDimensions,\n    error,\n    onError,\n    onNaturalDimensions\n  };\n}\n\n/**\n * This hook will compute concrete dimensions from image natural dimensions and\n * constraints. It will fetch the image and get its dimensions.\n *\n * @remarks If you know the dimensions beforehand, use\n * {@link useIMGElementStateWithCache} instead to save a network request and\n * prevent a layout shift.\n */\nexport default function useIMGElementState(\n  props: UseIMGElementStateProps\n): IMGElementState {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions,\n    cachedNaturalDimensions\n  } = props;\n  const { flatStyle, specifiedDimensions } = useImageSpecifiedDimensions(props);\n  const nomalizedSource = useIMGNormalizedSource({\n    specifiedDimensions,\n    source\n  });\n  const { naturalDimensions, onError, error } = useFetchedNaturalDimensions({\n    source: nomalizedSource,\n    specifiedDimensions,\n    cachedNaturalDimensions\n  });\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n\n  return getIMGState({\n    error,\n    alt,\n    altColor,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source: nomalizedSource\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}