{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTNodeChildrenProps = useTNodeChildrenProps;\nexports.default = void 0;\nvar _SharedPropsProvider = require(\"./context/SharedPropsProvider\");\nvar _TChildrenRenderer = require(\"./TChildrenRenderer\");\nvar _renderChildren = _interopRequireDefault(require(\"./renderChildren\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isCollapsible(tnode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\nfunction useTNodeChildrenProps(_ref) {\n  var tnode = _ref.tnode,\n    propsForChildren = _ref.propsForChildren,\n    _ref$disableMarginCol = _ref.disableMarginCollapsing,\n    disableMarginCollapsing = _ref$disableMarginCol === void 0 ? false : _ref$disableMarginCol,\n    renderChild = _ref.renderChild;\n  var _ref2 = (0, _SharedPropsProvider.useSharedProps)(),\n    enableExperimentalMarginCollapsing = _ref2.enableExperimentalMarginCollapsing;\n  var shouldCollapseChildren = enableExperimentalMarginCollapsing && !disableMarginCollapsing && isCollapsible(tnode);\n  return {\n    propsForChildren: propsForChildren,\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild: renderChild\n  };\n}\nfunction TNodeChildrenRenderer(props) {\n  if (props.tnode.type === 'text') {\n    return props.tnode.data;\n  }\n  return (0, _renderChildren.default)(useTNodeChildrenProps(props));\n}\nTNodeChildrenRenderer.defaultProps = _TChildrenRenderer.tchildrenRendererDefaultProps;\nvar _default = TNodeChildrenRenderer;\nexports.default = _default;","map":{"version":3,"names":["_SharedPropsProvider","require","_TChildrenRenderer","_renderChildren","_interopRequireDefault","isCollapsible","tnode","type","useTNodeChildrenProps","_ref","propsForChildren","_ref$disableMarginCol","disableMarginCollapsing","renderChild","_ref2","useSharedProps","enableExperimentalMarginCollapsing","shouldCollapseChildren","tchildren","children","TNodeChildrenRenderer","props","data","default","defaultProps","tchildrenRendererDefaultProps"],"sources":["C:\\applicationJS\\react-apps\\ReactNativeMobileApp\\node_modules\\react-native-render-html\\lib\\commonjs\\TNodeChildrenRenderer.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport { tchildrenRendererDefaultProps } from './TChildrenRenderer';\nimport {\n  TChildrenRendererProps,\n  TNodeChildrenRendererProps\n} from './shared-types';\nimport renderChildren from './renderChildren';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * A hook especially useful when one need to tamper with children in a custom\n * renderer. Should be used with {@link TChildrenRenderer}.\n *\n * @example\n * For example, a custom renderer which inserts ads in an article:\n *\n * ```tsx\n * function ArticleRenderer(props) {\n *   const { tnode, TDefaultRenderer, ...defaultRendererProps } = props;\n *   const tchildrenProps = useTNodeChildrenProps(props);\n *   const firstChildrenChunk = tnode.children.slice(0, 2);\n *   const secondChildrenChunk = tnode.children.slice(2, 4);\n *   const thirdChildrenChunk = tnode.children.slice(4, 5);\n *   return (\n *     <TDefaultRenderer tnode={tnode} {...defaultRendererProps}>\n *       <TChildrenRenderer {...tchildrenProps} tchildren={firstChildrenChunk} />\n *       {firstChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={secondChildrenChunk} />\n *       {secondChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={thirdChildrenChunk} />\n *     </TDefaultRenderer>\n *   );\n * };\n * ```\n */\nexport function useTNodeChildrenProps({\n  tnode,\n  propsForChildren,\n  disableMarginCollapsing = false,\n  renderChild\n}: TNodeChildrenRendererProps): TChildrenRendererProps {\n  const { enableExperimentalMarginCollapsing } = useSharedProps();\n  const shouldCollapseChildren =\n    enableExperimentalMarginCollapsing &&\n    !disableMarginCollapsing &&\n    isCollapsible(tnode);\n  return {\n    propsForChildren,\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild\n  };\n}\n\n/**\n * A component to render all children of a {@link TNode}.\n */\nfunction TNodeChildrenRenderer(\n  props: TNodeChildrenRendererProps\n): ReactElement {\n  if (props.tnode.type === 'text') {\n    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.tnode.data as unknown as ReactElement;\n  }\n  // A tnode type will never change. We can safely\n  // ignore the non-conditional rule of hooks.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return renderChildren(useTNodeChildrenProps(props));\n}\n\n/**\n * @ignore\n */\nTNodeChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TNodeChildrenRenderer;\n"],"mappings":";;;;;;;AAEA,IAAAA,oBAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAKA,IAAAE,eAAA,GAAAC,sBAAA,CAAAH,OAAA;;;;;;AAEA,SAASI,aAATA,CAAuBC,KAAvB,EAAqC;EACnC,OAAOA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,UAAhD;AACD;AA4BM,SAASC,qBAATA,CAAAC,IAAA,EAKgD;EAAA,IAJrDH,KADoC,GAAAG,IAAA,CACpCH,KADoC;IAEpCI,gBAFoC,GAAAD,IAAA,CAEpCC,gBAFoC;IAAAC,qBAAA,GAAAF,IAAA,CAGpCG,uBAAuB;IAAvBA,uBAAuB,GAAAD,qBAAA,cAAG,KAHU,GAAAA,qBAAA;IAIpCE,WAAA,GAAAJ,IAAA,CAAAI,WAAA;EAEA,IAAAC,KAAA,GAA+C,IAAAd,oBAAA,CAAAe,cAAA,GAA/C;IAAQC,kCAAA,GAAAF,KAAA,CAAAE,kCAAA;EACR,IAAMC,sBAAsB,GAC1BD,kCAAkC,IAClC,CAACJ,uBADD,IAEAP,aAAa,CAACC,KAAD,CAHf;EAIA,OAAO;IACLI,gBADK,EACLA,gBADK;IAELE,uBAAuB,EAAE,CAACK,sBAFrB;IAGLC,SAAS,EAAEZ,KAAK,CAACa,QAHZ;IAILN,WAAA,EAAAA;EAJK,CAAP;AAMD;AAKD,SAASO,qBAATA,CACEC,KADF,EAEgB;EACd,IAAIA,KAAK,CAACf,KAAN,CAAYC,IAAZ,KAAqB,MAAzB,EAAiC;IAE/B,OAAOc,KAAK,CAACf,KAAN,CAAYgB,IAAnB;EACD;EAID,OAAO,IAAAnB,eAAA,CAAAoB,OAAA,EAAef,qBAAqB,CAACa,KAAD,CAApC,CAAP;AACD;AAKDD,qBAAqB,CAACI,YAAtB,GAAqCtB,kBAAA,CAAAuB,6BAArC;eAEeL,qB"},"metadata":{},"sourceType":"script","externalDependencies":[]}